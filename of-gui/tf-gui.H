// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef tf_gui_H
#define tf_gui_H
#include <FL/Fl.H>
extern void userAction(Fl_Widget* target); 
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Tree.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Browser.H>

class UserInterface {
public:
  Fl_Double_Window* make_window();
  Fl_Double_Window *main_window;
  Fl_Tabs *tab_main_tabs;
private:
  inline void cb_tab_main_tabs_i(Fl_Tabs*, void*);
  static void cb_tab_main_tabs(Fl_Tabs*, void*);
public:
  Fl_Group *grp_scenario_browser;
private:
  inline void cb_grp_scenario_browser_i(Fl_Group*, void*);
  static void cb_grp_scenario_browser(Fl_Group*, void*);
public:
  Fl_Tree *tree_scenario_browser;
private:
  inline void cb_tree_scenario_browser_i(Fl_Tree*, void*);
  static void cb_tree_scenario_browser(Fl_Tree*, void*);
public:
  Fl_Button *btn_add_scenario_directory;
private:
  inline void cb_btn_add_scenario_directory_i(Fl_Button*, void*);
  static void cb_btn_add_scenario_directory(Fl_Button*, void*);
public:
  Fl_Button *btn_remove_scenario_directory;
private:
  inline void cb_btn_remove_scenario_directory_i(Fl_Button*, void*);
  static void cb_btn_remove_scenario_directory(Fl_Button*, void*);
public:
  Fl_Button *btn_load_refresh_scenarios;
private:
  inline void cb_btn_load_refresh_scenarios_i(Fl_Button*, void*);
  static void cb_btn_load_refresh_scenarios(Fl_Button*, void*);
public:
  Fl_Button *btn_open_recent;
private:
  inline void cb_btn_open_recent_i(Fl_Button*, void*);
  static void cb_btn_open_recent(Fl_Button*, void*);
public:
  Fl_Browser *brwsr_run_output;
  Fl_Group *grp_status_bar;
  Fl_Text_Display *txdsp_status_bar;
  void show();
  void start_showing_window();
};
#endif
